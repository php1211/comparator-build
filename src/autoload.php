<?php

$paths = array(
  __DIR__ . '/../vendor',
  __DIR__ . '/../../..'
);

foreach ($paths as $path) {
    if (@is_dir($path . '/composer') &&
        @is_file($path . '/autoload.php')) {
        require_once $path . '/autoload.php';

        return;
    }
}

// @codingStandardsIgnoreFile
// @codeCoverageIgnoreStart
// this is an autogenerated file - do not edit
spl_autoload_register(
    function($class) {
        static $classes = null;
        if ($classes === null) {
            $classes = array(
                'sebastianbergmann\\comparator\\arraycomparator' => '/ArrayComparator.php',
                'sebastianbergmann\\comparator\\comparator' => '/Comparator.php',
                'sebastianbergmann\\comparator\\comparisonfailure' => '/ComparisonFailure.php',
                'sebastianbergmann\\comparator\\domdocumentcomparator' => '/DOMDocumentComparator.php',
                'sebastianbergmann\\comparator\\datetimecomparator' => '/DateTimeComparator.php',
                'sebastianbergmann\\comparator\\doublecomparator' => '/DoubleComparator.php',
                'sebastianbergmann\\comparator\\exceptioncomparator' => '/ExceptionComparator.php',
                'sebastianbergmann\\comparator\\factory' => '/Factory.php',
                'sebastianbergmann\\comparator\\numericcomparator' => '/NumericComparator.php',
                'sebastianbergmann\\comparator\\objectcomparator' => '/ObjectComparator.php',
                'sebastianbergmann\\comparator\\resourcecomparator' => '/ResourceComparator.php',
                'sebastianbergmann\\comparator\\scalarcomparator' => '/ScalarComparator.php',
                'sebastianbergmann\\comparator\\splobjectstoragecomparator' => '/SplObjectStorageComparator.php',
                'sebastianbergmann\\comparator\\typecomparator' => '/TypeComparator.php'
            );
        }
        $cn = strtolower($class);
        if (isset($classes[$cn])) {
            require __DIR__ . $classes[$cn];
        }
    }
);
// @codeCoverageIgnoreEnd